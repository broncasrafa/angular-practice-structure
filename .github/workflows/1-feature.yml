# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: "1 - [FEAT] Build & PR"

on:
  push:
    branches: [ "feature**" ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: build
    strategy:
      matrix:
        node-version: [20]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checking out code
        uses: actions/checkout@v3

      - name: set up node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      # Install the dependencies need to build the app
      - name: install dependencies
        run: npm install

      #- name: run tests
      # run: npm run test:ci

      # Runs a set of commands to build
      - name: build
        run: npm run build

  open-pr-to-develop:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checking out code
        uses: actions/checkout@v3

      - name: extract git commit data
        uses: rlespinasse/git-commit-data-action@v1.x

      - name: update author information
        run: echo ${{ env.GIT_COMMIT_AUTHOR_NAME }} > AUTHOR

      - name: open Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          if [[ $BRANCH_NAME == feature* ]]; then
            TITLE="PR gerada automaticamente da branch $BRANCH_NAME"
            BODY="Este PR foi aberto automaticamente pelo pipeline de CI."
            hub pull-request -m "$TITLE" -m "$BODY" -b develop -h $BRANCH_NAME
          else
            echo "Not a feature branch. Skipping PR creation."
          fi
